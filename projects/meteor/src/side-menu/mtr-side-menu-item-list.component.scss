@import "../style/variables";
@import "../style/mixins";

@mixin itemColors($color, $contrast) {
  --side-menu-item-color: #{$color};
  --side-menu-item-color-contrast: #{$contrast};
}

:host {
  @include itemColors(
    chooseLightColor($dark),
    chooseContrastColor(chooseLightColor($dark))
  );

  display: block;
  width: 300px;
  height: 100%;
  overflow-y: auto;

  background-color: var(--side-menu-item-color);
  color: var(--side-menu-item-color-contrast);
  box-shadow: 2px 0 2px rgba(0, 0, 0, 0.2);

  transition: none;
  -moz-transition: all 300ms; // https://caniuse.com/#feat=mdn-css_properties_grid-template-columns_animation
}

.mtr-side-menu--closed :host {
  transform: translate3d(-250px, 0, 0);
}

.mtr-side-menu__toggle {
  float: right;
  padding: 0;
  font-size: 25px;
  width: 50px;
  &::ng-deep button {
    padding: $spacing-s 0;
    color: var(--side-menu-item-color-contrast) !important;
  }
}

.mtr-side-menu__title {
  padding: $spacing-m $spacing-l;
  margin: 0;
  color: var(--side-menu-item-color-contrast);
}

:host[inverse] {
  @include itemColors(
    chooseContrastColor(chooseLightColor($primary)),
    $primary
  );
}

@each $name, $value in $colors {
  :host.#{"" + $name},
  :host[#{"" + $name}] {
    @include itemColors($value, chooseContrastColor(chooseLightColor($value)));
  }

  :host.#{"" + $name}.inverse,
  :host[#{"" + $name}][inverse] {
    @include itemColors(chooseContrastColor(chooseLightColor($value)), $value);
  }
}
